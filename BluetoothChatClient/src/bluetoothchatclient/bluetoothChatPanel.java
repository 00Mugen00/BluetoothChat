package bluetoothchatclient;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import com.sun.glass.events.KeyEvent;
import java.awt.Frame;
import java.awt.Toolkit;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.microedition.io.StreamConnection;

/**
 *
 * @author johncarlo
 */
public class bluetoothChatPanel extends javax.swing.JFrame{

    /**
     * Creates new form bluetoothChatPanel
     */
    private BluetoothChatClient btClient;
    private InputStream inputStream;
    private OutputStream outputStream;
    private StreamConnection serviceRequestManager;
    
    public bluetoothChatPanel() {
        //up to 15
        String URL = "btspp://"+"001A7DDA710E"+":"+1;
        initComponents();
        btClient = new BluetoothChatClient(URL);
        this.printStatus("Client has connected to Server\n");
        this.inputStream = btClient.getInputStream();
	this.outputStream = btClient.getOutputStream();
	this.serviceRequestManager = btClient.getStreamConnection();
        if(inputStream==null||outputStream==null||serviceRequestManager==null){
            System.exit(0);
        }
        setIcon();
        BluetoothClientMessageReciever bluetoothClientMessageReciever = new BluetoothClientMessageReciever(this.inputStream,this.outputStream,this,this.serviceRequestManager);
	bluetoothClientMessageReciever.start();
    }
    
    public void sendMessage(){
        try {
            String message = this.getMessage();
            outputStream.write((message+"\n").getBytes());
            this.printMessageInChat("Client", message+"\n");
            this.clearMessageField();
            if("END".equals(message)){
		//Cuando el cliente envia un END cerramos InputStream y OutStream
		inputStream.close();
		outputStream.close();
		serviceRequestManager.close();
            }
	} catch (IOException e1) {
            //Esta excepción salta cuando se ha cerrado la conexion y el cliente desea enviar un mensaje
            this.printMessageInChat("ERROR", "Closed connection\n");
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        close = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        sendButton = new javax.swing.JLabel();
        messageField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 450));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                closeMouseReleased(evt);
            }
        });
        getContentPane().add(close, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 20, 20));

        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                minimizeMouseReleased(evt);
            }
        });
        getContentPane().add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 10, 20, 20));

        sendButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                sendButtonMouseReleased(evt);
            }
        });
        getContentPane().add(sendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 380, 60, 30));

        messageField.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        messageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                messageFieldKeyReleased(evt);
            }
        });
        getContentPane().add(messageField, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 381, 432, 30));

        jScrollPane1.setOpaque(false);

        chatArea.setColumns(20);
        chatArea.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        chatArea.setLineWrap(true);
        chatArea.setRows(5);
        chatArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        chatArea.setOpaque(false);
        chatArea.setEditable(false);
        jScrollPane1.setViewportView(chatArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 66, 530, 310));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bluetoothchatclientimages/window.png"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void minimizeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseReleased
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseReleased

    private void sendButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendButtonMouseReleased
        sendMessage();
    }//GEN-LAST:event_sendButtonMouseReleased

    private void closeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseReleased
        try {
            outputStream.write(("END\n").getBytes());
            inputStream.close();
            outputStream.close();
            serviceRequestManager.close();
        } catch (IOException ex) {
            System.out.println("Program Closed");
        }
        System.exit(0);
    }//GEN-LAST:event_closeMouseReleased

    private void messageFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_messageFieldKeyReleased
        //Si se pulsa enter que también se haga el envio
        int key = evt.getKeyCode();
            if(key == KeyEvent.VK_ENTER){
                sendMessage();
        }
    }//GEN-LAST:event_messageFieldKeyReleased

    public void printStatus(String status){
	chatArea.append(status);
    }
    public String getMessage(){
	return this.messageField.getText();
    }
    public void printMessageInChat(String user,String message){
	if(!"".equals(message)){
            chatArea.append("\n"+user+": "+message);
	}
    }
    public void clearMessageField(){
	messageField.setText("");
    }
    private void setIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/bluetoothchatclientimages/client.png")));
    }
    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        //Set the Nimbus look and feel
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bluetoothChatPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bluetoothChatPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bluetoothChatPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bluetoothChatPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        // Create and display the form
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bluetoothChatPanel().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JTextArea chatArea;
    private javax.swing.JLabel close;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messageField;
    private javax.swing.JLabel minimize;
    private javax.swing.JLabel sendButton;
    // End of variables declaration//GEN-END:variables

}
